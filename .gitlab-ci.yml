# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/


# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

bandit-run:
  image: python:3.9-alpine
  before_script:
    - python -V
    - python -m venv venv
    - source venv/bin/activate
  script:
    - pip install bandit
    - bandit -r app

unittests:
  image: python:3.9-alpine
  before_script:
    - python -V
    - python -m venv venv
    - source venv/bin/activate
  script:
    - apk add alpine-sdk libffi-dev
    - pip install -r requirements.txt
    - python -m app.test.runtests

lint:frontend:
  image: node:15.13.0
  script:
    - npm install
    - npm run lint

lint:backend:
  image: python:3.9-alpine
  before_script:
    - python -V  # Print out python version for debugging
    - python -m venv venv
    - source venv/bin/activate
  script:
    - pip install flake8 flake8-bandit
    - flake8 --statistics

# run:
#   script:
#     - python setup.py bdist_wheel
#     # an alternative approach is to install and run:
#     - pip install dist/*
#     # run the command here
#   artifacts:
#     paths:
#       - dist/*.whl

# pages:
#   script:
#     - pip install sphinx sphinx-rtd-theme
#     - cd doc ; make html
#     - mv build/html/ ../public/
#   artifacts:
#     paths:
#       - public
#   only:
#     - master
